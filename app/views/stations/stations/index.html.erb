<head>
    <meta charset="UTF-8">
    <title>Staion Viewer</title>

<!--    <script type="text/javascript" src="../../assets/javascripts/vis.js"></script>-->
<!--    <link href="../../assets/stylesheets/vis-network.min.css" rel="stylesheet" type="text/css" />-->

  <script type="text/javascript" src="../javascripts/visjs/vis-network.js"></script>


    <style type="text/css">
      #station_graph {
        height: 600px;
        border: 1px solid lightgray;
      }
    </style>

</head>
<body>
<div class="col-md-3">
  <%#= collection_select :stop_id, nil, @stops, :id, :name, include_blank: true %>
  <div>
    Station Id: <%= text_field(:station_vis, :station_id, size: 25)  %>
  </div>
  <div>
    Date: <%= date_field(:station_vis, :otp_date)  %>
  </div>
  <div>
    Time: <%= time_field(:station_vis, :start_time)  %>
  </div>
  <div>
    <button class="search_station" onclick="find_station_from_api()">Display Station</button>
  </div>

  <div>
    <h4 class="text-center">Alerts</h4>
    <ul>
      <% @station.alerts.each do |a| %>
        <li>
          <%= a %>
        </li>
      <% end %>
    </ul>
  </div>

</div>
<div class="col-md-9">
    <h3 class="text-center"><%= @station.station_name %></h3>
    <div id="station_graph"></div>
</div>




<script type="text/javascript">
    // create an array with nodes
    var station = <%= @station.to_json.html_safe %>;

    function build_edges(){
        var edges_for_visualization = [];

        station.links.forEach(function(element) {
            edges_for_visualization.push({from: element.source, to: element.destination})
        });

        return edges_for_visualization;
    }

    function build_nodes(station_nodes, primary_color, cluster) {
        var nodes_for_visualization = [];

        station_nodes.forEach(function(element) {
            nodes_for_visualization.push({id: element.id, label: element.label, color: primary_color, cid: cluster})
        });

        // console.log('nodes_for_visualization');
        // console.log(nodes_for_visualization);

        return nodes_for_visualization;
    }

    function build_entrance_nodes()
    {
        return build_nodes(<%= @station.find_entrance_nodes.to_json.html_safe %>, 'Gold', 'entrance')
    }

    function build_stop_nodes()
    {
        return build_nodes(<%= @station.find_stop_nodes.to_json.html_safe %>, 'LightSkyBlue ', 'stop')
    }

    function build_other_nodes()
    {
        return build_nodes(<%= @station.find_other_nodes.to_json.html_safe %>, 'LightGreen', 'other')
    }

    function build_new_networkgraph(){
        // create an array with edges
        var edges = new vis.DataSet(build_edges());
        var nodes = new vis.DataSet();

        nodes.add(build_entrance_nodes());
        nodes.add(build_stop_nodes());
        nodes.add(build_other_nodes());

        // create a network
        var container = document.getElementById('station_graph');

        // provide the data in the vis format
        var data = {
            nodes: nodes,
            edges: edges
        };

        //define the length of edges to space them out more.
        var options = {
            edges: {
                length: 325,
            }
        };

        // initialize your network!
        var network = new vis.Network(container, data, options);
    }

    build_new_networkgraph();

    function find_station_from_api(){

        console.log('I WAS CLICKED');

        var url = "<%= get_station_from_api_stations_stations_path %>";
        $.ajax({
            url: url,
            data: {station_vis_station_id: $('#station_vis_station_id').val(),
                  station_vis_otp_date: $('#station_vis_otp_date').val(),
                  station_vis_start_time: $('#station_vis_start_time').val()},
            success: function(result){
                console.log(result);
                station = <%= @station.to_json.html_safe %>;
                build_new_networkgraph();
            },
            error: function(xhr, ajaxOptions, thrownError){
                alert("We are sorry but something went wrong please check the station ID and date and time." +' '+thrownError);
            }
        });
    }


</script>